name: Docker Image CI

on:
  push:
    branches: ['main']
    tags: ['v*'] # si publicas releases con tags semver
  pull_request:
    branches: ['main']

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_REGISTRY }}/graphql-cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Etiquetas y labels automáticos (semver/sha/branch)
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      # Login solo si vamos a pushear (push en main o tag)
      - name: Docker Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build (en PR: build sin push; en main/tag: build+push)
      - name: Build (and push if not PR)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false # true si quieres attestation SBOM/SLSA

      # Verificación rápida del contenedor sólo cuando se publicó
      - name: Smoke test --version
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ env.IMAGE_NAME }}:$(echo "${{ steps.meta.outputs.tags }}" | head -n1 | sed 's/.*://') --version || true

      # Opcional: escaneo de seguridad (rápido) en PR y main
      # - name: Trivy scan
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     image-ref: ${{ env.IMAGE_NAME }}:$(echo "${{ steps.meta.outputs.tags }}" | head -n1 | sed 's/.*://')
      #     format: table
      #     exit-code: '0'
