name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necesario para leer historial de commits

      # Genera versión semántica a partir de mensajes de commit (major:, feat:, fix:, etc.)
      - name: Generate Semantic Version
        id: version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          tag_prefix: 'v'
          major_pattern: 'major:'
          minor_pattern: 'feat:'
          format: 'v{major}.{minor}.{patch}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build solo (no push) en Pull Request
      - name: Build image (PR - no push)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: |
            ${{ secrets.DOCKER_HUB_REGISTRY }}/graphql-cicd:${{ steps.version.outputs.version }}

      # Login a Docker Hub sólo en push
      - name: Docker Login
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & Push en push a main (tag semántico + latest)
      - name: Build & Push (semantic tag + latest)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_REGISTRY }}/graphql-cicd:${{ steps.version.outputs.version }}
            ${{ secrets.DOCKER_HUB_REGISTRY }}/graphql-cicd:latest

      # Verificación opcional (si tu binario soporta --version)
      - name: Verify Image Version
        if: github.event_name == 'push'
        run: |
          docker run --rm ${{ secrets.DOCKER_HUB_REGISTRY }}/graphql-cicd:${{ steps.version.outputs.version }} --version || true
